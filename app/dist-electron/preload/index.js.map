{
  "version": 3,
  "sources": ["../../electron/preload.ts"],
  "sourcesContent": ["import { ipcRenderer, contextBridge } from 'electron'\r\n\r\n// --------- Expose some API to the Renderer process ---------\r\ncontextBridge.exposeInMainWorld('ipcRenderer', {\r\n  on(...args: Parameters<typeof ipcRenderer.on>) {\r\n    const [channel, listener] = args\r\n    return ipcRenderer.on(channel, (event, ...args) => listener(event, ...args))\r\n  },\r\n  off(...args: Parameters<typeof ipcRenderer.off>) {\r\n    const [channel, ...omit] = args\r\n    return ipcRenderer.off(channel, ...omit)\r\n  },\r\n  send(...args: Parameters<typeof ipcRenderer.send>) {\r\n    const [channel, ...omit] = args\r\n    return ipcRenderer.send(channel, ...omit)\r\n  },\r\n  invoke(...args: Parameters<typeof ipcRenderer.invoke>) {\r\n    const [channel, ...omit] = args\r\n    return ipcRenderer.invoke(channel, ...omit)\r\n  },\r\n\r\n  // You can expose other APTs you need here.\r\n  // ...\r\n})\r\n"],
  "mappings": ";;;;;;;;;;AAAA,wBAA2C;AAG3C,gCAAc,kBAAkB,eAAe;AAAA,IAC7C,MAAM,MAAyC;AAC7C,YAAM,CAAC,SAAS,QAAQ,IAAI;AAC5B,aAAO,4BAAY,GAAG,SAAS,CAAC,UAAUA,UAAS,SAAS,OAAO,GAAGA,KAAI,CAAC;AAAA,IAC7E;AAAA,IACA,OAAO,MAA0C;AAC/C,YAAM,CAAC,SAAS,GAAG,IAAI,IAAI;AAC3B,aAAO,4BAAY,IAAI,SAAS,GAAG,IAAI;AAAA,IACzC;AAAA,IACA,QAAQ,MAA2C;AACjD,YAAM,CAAC,SAAS,GAAG,IAAI,IAAI;AAC3B,aAAO,4BAAY,KAAK,SAAS,GAAG,IAAI;AAAA,IAC1C;AAAA,IACA,UAAU,MAA6C;AACrD,YAAM,CAAC,SAAS,GAAG,IAAI,IAAI;AAC3B,aAAO,4BAAY,OAAO,SAAS,GAAG,IAAI;AAAA,IAC5C;AAAA;AAAA;AAAA,EAIF,CAAC;",
  "names": ["args"]
}
